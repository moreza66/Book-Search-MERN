[{"/Users/mohammadrezamemar/Book-Search-MERN/client/src/index.js":"1","/Users/mohammadrezamemar/Book-Search-MERN/client/src/App.js":"2","/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/Navbar.js":"3","/Users/mohammadrezamemar/Book-Search-MERN/client/src/pages/SearchBooks.js":"4","/Users/mohammadrezamemar/Book-Search-MERN/client/src/pages/SavedBooks.js":"5","/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/SignupForm.js":"6","/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/LoginForm.js":"7","/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/auth.js":"8","/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/localStorage.js":"9","/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/API.js":"10","/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/queries.js":"11"},{"size":266,"mtime":1672797996606,"results":"12","hashOfConfig":"13"},{"size":952,"mtime":1673585348854,"results":"14","hashOfConfig":"13"},{"size":2523,"mtime":1673585098220,"results":"15","hashOfConfig":"13"},{"size":4718,"mtime":1673586737312,"results":"16","hashOfConfig":"13"},{"size":3338,"mtime":1673588415175,"results":"17","hashOfConfig":"13"},{"size":3268,"mtime":1672797996606,"results":"18","hashOfConfig":"13"},{"size":2617,"mtime":1672797996606,"results":"19","hashOfConfig":"13"},{"size":1234,"mtime":1672797996606,"results":"20","hashOfConfig":"13"},{"size":793,"mtime":1672797996606,"results":"21","hashOfConfig":"13"},{"size":1392,"mtime":1673587003775,"results":"22","hashOfConfig":"13"},{"size":256,"mtime":1673587718781,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"kgrgn9",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mohammadrezamemar/Book-Search-MERN/client/src/index.js",[],["49","50"],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/App.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/Navbar.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/pages/SearchBooks.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/pages/SavedBooks.js",["51"],"// import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {  deleteBook } from '../utils/API';\nimport { GET_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  const { data } = useQuery(GET_ME);\n  const userData = data?.me || {};\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\nconsole.log(\"%%%%%\", userData)\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n  //       console.log(\">>>>>>> RESPONSEEEE <<<\", response)\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       console.log(\">>>>>>> this is res <<<\", user)\n        \n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // const updatedUser = await response.json();\n      // setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/SignupForm.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/components/LoginForm.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/auth.js",["52"],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/localStorage.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/API.js",[],"/Users/mohammadrezamemar/Book-Search-MERN/client/src/utils/queries.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":20,"nodeType":"59","messageId":"60","endLine":3,"endColumn":31},{"ruleId":"61","severity":1,"message":"62","line":49,"column":1,"nodeType":"63","endLine":49,"endColumn":34},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useMutation' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]